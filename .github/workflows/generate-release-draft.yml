name: Generate release draft & Autolabel pull requests

on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches:
      - main

  workflow_dispatch:

  # pull_request event is required only for autolabeler
  # pull_request:
  # Only following types are handled by the action, but one can default to all as well
  # types: [opened, reopened, synchronize]
  # pull_request_target event is required for autolabeler to support PRs from forks
  pull_request_target:
    types: [opened, reopened, synchronize]

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      # write permission is required to create a github release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ラベルが存在しなければ作成
      - name: Ensure autolabeler labels exist
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const yaml = require('js-yaml');
            
            const configPath = '.github/release-drafter.yml';
            const content = fs.readFileSync(configPath, 'utf8');
            const config = yaml.load(content);
            
            if (!config.autolabeler) {
              console.log("No autolabeler section found.");
              return;
            }
            
            const existingLabels = await github.rest.issues.listLabelsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100,
            });
            
            const existingLabelNames = existingLabels.data.map(label => label.name);
            
            for (const rule of config.autolabeler) {
              const label = rule.label;
              if (!existingLabelNames.includes(label)) {
                console.log(`Creating label: ${label}`);
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: label,
                  color: 'ededed',
                });
              } else {
                console.log(`Label already exists: ${label}`);
              }
            }

      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v6
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        # with:
        #   config-name: my-config.yml
        #   disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
